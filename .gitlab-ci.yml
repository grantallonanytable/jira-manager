image: cloudbees/java-with-docker-client:8-jdk-18.06.1-ce

cache:
  key: "$CI_PROJECT_ID"
  untracked: false
  paths:
  - ".m2"

services:
- name: docker:18-dind
  command: ["--insecure-registry=todo_repo_host:8888"]

variables:
  MAVEN_USER_HOME: .m2
  MAVEN_OPTS: >-
    -Duser.home=$CI_PROJECT_DIR
    -Dhttp.proxyHost=todo_proxy-01
    -Dhttp.proxyPort=80
    -Dhttps.proxyHost=todo_proxy-01
    -Dhttps.proxyPort=80
    -Dhttp.nonProxyHosts=todo_repo_host
  DOCKER_HOST: tcp://docker:2375
  K8S_SERVER: https://todo-kubernetes-host:6443
  HTTPS_PROXY: http://todo_proxy-01:80
  HTTP_PROXY: http://todo_proxy-01:80
  NO_PROXY: todo-kubernetes-host,todo_repo_host,docker
before_script:
- mkdir -p ${MAVEN_USER_HOME}
- cp $CI_PROJECT_DIR/m2_settings.xml ${MAVEN_USER_HOME}/settings.xml
- sed -i'' -r 's|NEXUS_USER|'$NEXUS_USER'|g' ${MAVEN_USER_HOME}/settings.xml
- sed -i'' -r 's|NEXUS_PASSWORD|'$NEXUS_PASSWORD'|g' ${MAVEN_USER_HOME}/settings.xml
- printf '$NEXUS_USER=$NEXUS_PASSWORD'

stages:
- build_common
- build
- install
- update
- delete

Build:
  stage: build_common
  script:
  - "printf '$NEXUS_USER=$NEXUS_PASSWORD' | ./mvnw clean verify"
  except:
  - tags

Build snapshot:
  stage: build_common
  script:
  - "./mvnw clean deploy --projects topic,api --also-make"
  when: manual
  except:
  - tags

Build chart snapshot:
  stage: build_common
  image: todo_repo_host:8888/todo-repo-project-group-name/k8s-helm:v2.13.1
  before_script:
  - helm repo add nexus-snapshots http://todo_repo_host:8081/repository/helm-snapshots/
  script:
  - helm nexus-push nexus-snapshots helm/jira-manager --username "$NEXUS_USER" --password "$NEXUS_PASSWORD"
  when: manual
  except:
  - tags

Build release:
  stage: build_common
  script:
  - "./mvnw clean deploy"
  only:
  - tags

Build chart release:
  stage: build_common
  image: todo_repo_host:8888/todo-repo-project-group-name/k8s-helm:v2.13.1
  before_script:
  - helm repo add nexus-releases http://todo_repo_host:8081/repository/helm-releases/
  script:
  - helm nexus-push nexus-releases helm/jira-manager --username "$NEXUS_USER" --password "$NEXUS_PASSWORD"
  only:
  - tags

.build_template: &build_def
  stage: build
  script:
    - "./mvnw clean deploy"
  when: manual

.install_template: &install_def
  stage: install
  image: todo_repo_host:8888/todo-repo-project-group-name/k8s-helm:v2.13.1
  before_script:
    - sed -i'' -r 's|K8S_TOKEN|'$K8S_TOKEN'|g' ${CI_PROJECT_DIR}/kube_config
    - helm repo add nexus-snapshots http://todo_repo_host:8081/repository/helm-snapshots/
  script:
    - "helm install --debug nexus-snapshots/jira-manager
      --kubeconfig ${CI_PROJECT_DIR}/kube_config
      --name jira-manager-${CI_ENVIRONMENT_NAME}
      --namespace ${CI_ENVIRONMENT_NAME}
      --set-file config=${CI_PROJECT_DIR}/impl/src/main/resources/application-k8s-test.conf
      --set ingress.host=todo-kubernetes-test-stand-${CI_ENVIRONMENT_NAME}
      --set image.tag=${DOCKER_IMAGE_VERSION}
      --set java.debugEnabled=true
      --set nonProxyHosts=${NON_PROXY_HOSTS}"
  when: manual

.update_template: &update_def
  stage: update
  image: todo_repo_host:8888/todo-repo-project-group-name/k8s-helm:v2.13.1
  before_script:
  - sed -i'' -r 's|K8S_TOKEN|'$K8S_TOKEN'|g' ${CI_PROJECT_DIR}/kube_config
  - helm repo add nexus-snapshots http://todo_repo_host:8081/repository/helm-snapshots/
  script:
  - "helm upgrade --debug jira-manager-${CI_ENVIRONMENT_NAME} nexus-snapshots/jira-manager
      --kubeconfig ${CI_PROJECT_DIR}/kube_config
      --namespace ${CI_ENVIRONMENT_NAME}
      --set-file config=${CI_PROJECT_DIR}/impl/src/main/resources/application-k8s-test.conf
      --set ingress.host=todo-kubernetes-test-stand-${CI_ENVIRONMENT_NAME}
      --set image.tag=${DOCKER_IMAGE_VERSION}
      --set java.debugEnabled=true
      --set nonProxyHosts=${NON_PROXY_HOSTS}"
  when: manual

.delete_template: &delete_def
  stage: delete
  image: todo_repo_host:8888/todo-repo-project-group-name/k8s-helm:v2.13.1
  before_script:
  - sed -i'' -r 's|K8S_TOKEN|'$K8S_TOKEN'|g' ${CI_PROJECT_DIR}/kube_config
  script:
  - helm delete --purge --kubeconfig ${CI_PROJECT_DIR}/kube_config jira-manager-${CI_ENVIRONMENT_NAME}
  when: manual
  
.namespace_test0011: &namespace_test199
  environment:
    name: test199
  variables:
    DOCKER_IMAGE_VERSION: 199-SNAPSHOT
    NON_PROXY_HOSTS: "localhost|*.todo_intranet.ru"

.namespace_test105: &namespace_test105_def
  environment:
    name: test105
  variables:
    DOCKER_IMAGE_VERSION: 105-SNAPSHOT
    NON_PROXY_HOSTS: "localhost|*.todo_intranet.ru"

Build [DevOps199]:
  <<: *namespace_test199
  <<: *build_def

Install [DevOps199]:
  <<: *namespace_test199
  <<: *install_def

Update [DevOps199]:
  <<: *namespace_test199
  <<: *update_def

Delete [DevOps199]:
  <<: *namespace_test199
  <<: *delete_def

Build [Develop-105]:
  <<: *namespace_test105_def
  <<: *build_def

Install [Develop-105]:
  <<: *namespace_test105_def
  <<: *install_def

Update [Develop-105]:
  <<: *namespace_test105_def
  <<: *update_def

Delete [Develop-105]:
  <<: *namespace_test105_def
  <<: *delete_def


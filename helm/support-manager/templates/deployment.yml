apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        date: {{ date "20060102150405" .Release.Time | quote }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.image.tag }}
          image: "todo_repo_host:8888/todo-repo-project-group-name/{{ .Chart.Name }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "todo_repo_host:8888/todo-repo-project-group-name/{{ .Chart.Name }}:{{ .Chart.Version }}"
          {{- end }}
          ports:
            - containerPort: 9000
              name: http
            {{- if .Values.java.debugEnabled }}
            - containerPort: 5005
              name: "jvm-debug"
            {{- end }}
            - containerPort: 8558
              name: management
          env:
            - name: "REQUIRED_CONTACT_POINT_NR"
              value: {{ .Values.replicaCount | quote }}
            - name: "LOGSTASH_DESTINATION"
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Chart.Name }}-config"
                  key: logstash
            - name: "JAVA_INIT_MEM_RATIO"
              value: "{{ .Values.java.initMemRation }}"
            - name: "JAVA_MAX_MEM_RATIO"
              value: "{{ .Values.java.maxMemRation }}"
            - name: "JAVA_OPTIONS"
              value: "{{ .Values.java.options }} -Dhttp.nonProxyHosts={{ .Values.nonProxyHosts }}"
            {{- if .Values.java.debugEnabled }}
            - name: "JAVA_ENABLE_DEBUG"
              value: "{{ .Values.java.debugEnabled }}"
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          imagePullPolicy: Always
          volumeMounts:
            - name: "{{ .Chart.Name }}-config-volume"
              mountPath: "/opt/conf"
          readinessProbe:
            httpGet:
              path: "/ready"
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
          livenessProbe:
            httpGet:
              path: "/alive"
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 30
      volumes:
        - name: "{{ .Chart.Name }}-config-volume"
          configMap:
            name: "{{ .Chart.Name }}-config"
            items:
              - key: conf
                path: "application.conf"